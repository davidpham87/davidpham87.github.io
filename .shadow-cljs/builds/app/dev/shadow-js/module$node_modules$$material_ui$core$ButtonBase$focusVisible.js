["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@material-ui/core/ButtonBase/focusVisible.js"],"~:js","shadow$provide.module$node_modules$$material_ui$core$ButtonBase$focusVisible=function(global,process,require,module,exports,shadow$shims){function detectFocusVisible(instance,element,callback){var attempt=3<arguments.length&&void 0!==arguments[3]?arguments[3]:1;(0,_warning.default)(instance.focusVisibleCheckTime,\"Material-UI: missing instance.focusVisibleCheckTime.\");(0,_warning.default)(instance.focusVisibleMaxCheckTimes,\"Material-UI: missing instance.focusVisibleMaxCheckTimes.\");instance.focusVisibleTimeout=\nsetTimeout(function(){var activeElement;for(activeElement=(0,_ownerDocument.default)(element).activeElement;activeElement&&activeElement.shadowRoot&&activeElement.shadowRoot.activeElement;)activeElement=activeElement.shadowRoot.activeElement;internal.focusKeyPressed&&(activeElement===element||element.contains(activeElement))?callback():attempt<instance.focusVisibleMaxCheckTimes&&detectFocusVisible(instance,element,callback,attempt+1)},instance.focusVisibleCheckTime)}global=require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");\nObject.defineProperty(exports,\"__esModule\",{value:!0});exports.detectFocusVisible=detectFocusVisible;exports.listenForFocusKeys=function(win){win.addEventListener(\"keyup\",handleKeyUpEvent)};var _warning=global(require(\"module$node_modules$warning$warning\")),_ownerDocument=global(require(\"module$node_modules$$material_ui$core$utils$ownerDocument\")),internal={focusKeyPressed:!1,keyUpEventTimeout:-1},FOCUS_KEYS=[9,13,27,32,37,38,39,40],handleKeyUpEvent=function(event){-1<FOCUS_KEYS.indexOf(event.keyCode)&&\n(internal.focusKeyPressed=!0,clearTimeout(internal.keyUpEventTimeout),internal.keyUpEventTimeout=setTimeout(function(){internal.focusKeyPressed=!1},500))}}","~:source","shadow$provide[\"module$node_modules$$material_ui$core$ButtonBase$focusVisible\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.detectFocusVisible = detectFocusVisible;\nexports.listenForFocusKeys = listenForFocusKeys;\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\nvar _ownerDocument = _interopRequireDefault(require(\"../utils/ownerDocument\"));\n\nvar internal = {\n  focusKeyPressed: false,\n  keyUpEventTimeout: -1\n};\n\nfunction findActiveElement(doc) {\n  var activeElement = doc.activeElement;\n\n  while (activeElement && activeElement.shadowRoot && activeElement.shadowRoot.activeElement) {\n    activeElement = activeElement.shadowRoot.activeElement;\n  }\n\n  return activeElement;\n}\n\nfunction detectFocusVisible(instance, element, callback) {\n  var attempt = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(instance.focusVisibleCheckTime, 'Material-UI: missing instance.focusVisibleCheckTime.') : void 0;\n  process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(instance.focusVisibleMaxCheckTimes, 'Material-UI: missing instance.focusVisibleMaxCheckTimes.') : void 0;\n  instance.focusVisibleTimeout = setTimeout(function () {\n    var doc = (0, _ownerDocument.default)(element);\n    var activeElement = findActiveElement(doc);\n\n    if (internal.focusKeyPressed && (activeElement === element || element.contains(activeElement))) {\n      callback();\n    } else if (attempt < instance.focusVisibleMaxCheckTimes) {\n      detectFocusVisible(instance, element, callback, attempt + 1);\n    }\n  }, instance.focusVisibleCheckTime);\n}\n\nvar FOCUS_KEYS = [9, // 'Tab',\n13, // 'Enter',\n27, // 'Escape',\n32, // ' ',\n37, // 'ArrowLeft',\n38, // 'ArrowUp',\n39, // 'ArrowRight',\n40];\n\nfunction isFocusKey(event) {\n  // Use event.keyCode to support IE 11\n  return FOCUS_KEYS.indexOf(event.keyCode) > -1;\n}\n\nvar handleKeyUpEvent = function handleKeyUpEvent(event) {\n  if (isFocusKey(event)) {\n    internal.focusKeyPressed = true; // Let's consider that the user is using a keyboard during a window frame of 500ms.\n\n    clearTimeout(internal.keyUpEventTimeout);\n    internal.keyUpEventTimeout = setTimeout(function () {\n      internal.focusKeyPressed = false;\n    }, 500);\n  }\n};\n\nfunction listenForFocusKeys(win) {\n  // The event listener will only be added once per window.\n  // Duplicate event listeners will be ignored by addEventListener.\n  // Also, this logic is client side only, we don't need a teardown.\n  win.addEventListener('keyup', handleKeyUpEvent);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$shadow.js","~$module$node_modules$warning$warning","~$module$node_modules$$material_ui$core$utils$ownerDocument"]],"~:properties",["^5",["focusVisibleTimeout","keyUpEventTimeout","listenForFocusKeys","__esModule","value","focusKeyPressed","detectFocusVisible"]],"~:compiled-at",1554094607704,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$material_ui$core$ButtonBase$focusVisible.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,8DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CA8B/IC,QAASA,mBAAkB,CAACC,QAAD,CAAWC,OAAX,CAAoBC,QAApB,CAA8B,CACvD,IAAIC,QAA6B,CAAnB,CAAAC,SAAAC,OAAA,EAAyCC,IAAAA,EAAzC,GAAwBF,SAAA,CAAU,CAAV,CAAxB,CAAqDA,SAAA,CAAU,CAAV,CAArD,CAAoE,CAC1C,EAAC,CAAA,CAAGG,QAAAC,QAAJ,EAAsBR,QAAAS,sBAAtB,CAAsD,sDAAtD,CACA,EAAC,CAAA,CAAGF,QAAAC,QAAJ,EAAsBR,QAAAU,0BAAtB,CAA0D,0DAA1D,CACxCV,SAAAW,oBAAA;AAA+BC,UAAA,CAAW,QAAS,EAAG,CAEpD,IAAIC,aAbN,KAFIA,aAEJ,CAYYC,CAAC,CAAA,CAAGC,cAAAP,QAAJM,EAA4Bb,OAA5Ba,CAdQD,cAEpB,CAAOA,aAAP,EAAwBA,aAAAG,WAAxB,EAAoDH,aAAAG,WAAAH,cAApD,CAAA,CACEA,aAAA,CAAgBA,aAAAG,WAAAH,cAcZI,SAAAC,gBAAJ,GAAiCL,aAAjC,GAAmDZ,OAAnD,EAA8DA,OAAAkB,SAAA,CAAiBN,aAAjB,CAA9D,EACEX,QAAA,EADF,CAEWC,OAFX,CAEqBH,QAAAU,0BAFrB,EAGEX,kBAAA,CAAmBC,QAAnB,CAA6BC,OAA7B,CAAsCC,QAAtC,CAAgDC,OAAhD,CAA0D,CAA1D,CAPkD,CAAvB,CAS5BH,QAAAS,sBAT4B,CAJwB,CA3BrDW,MAAAA,CAAyBzB,OAAA,CAAQ,kEAAR,CAE7B0B;MAAAC,eAAA,CAAsBzB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3C0B,MAAO,CAAA,CADoC,CAA7C,CAGA1B,QAAAE,mBAAA,CAA6BA,kBAC7BF,QAAA2B,mBAAA,CA8DAA,QAA2B,CAACC,GAAD,CAAM,CAI/BA,GAAAC,iBAAA,CAAqB,OAArB,CAA8BC,gBAA9B,CAJ+B,CA5DjC,KAAIpB,SAAWa,MAAA,CAAuBzB,OAAA,CAAQ,qCAAR,CAAvB,CAAf,CAEIoB,eAAiBK,MAAA,CAAuBzB,OAAA,CAAQ,2DAAR,CAAvB,CAFrB,CAIIsB,SAAW,CACbC,gBAAiB,CAAA,CADJ,CAEbU,kBAAoB,EAFP,CAJf,CAmCIC,WAAa,CAAC,CAAD,CACjB,EADiB,CAEjB,EAFiB,CAGjB,EAHiB,CAIjB,EAJiB,CAKjB,EALiB,CAMjB,EANiB,CAOjB,EAPiB,CAnCjB,CAiDIF,iBAAmBA,QAAyB,CAACG,KAAD,CAAQ,CAHV,EAI5C,CAJOD,UAAAE,QAAA,CAIQD,KAJWE,QAAnB,CAIP;CACEf,QAAAC,gBAGA,CAH2B,CAAA,CAG3B,CADAe,YAAA,CAAahB,QAAAW,kBAAb,CACA,CAAAX,QAAAW,kBAAA,CAA6BhB,UAAA,CAAW,QAAS,EAAG,CAClDK,QAAAC,gBAAA,CAA2B,CAAA,CADuB,CAAvB,CAE1B,GAF0B,CAJ/B,CADsD,CA5DuF;\",\n\"sources\":[\"node_modules/@material-ui/core/ButtonBase/focusVisible.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$material_ui$core$ButtonBase$focusVisible\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.detectFocusVisible = detectFocusVisible;\\nexports.listenForFocusKeys = listenForFocusKeys;\\n\\nvar _warning = _interopRequireDefault(require(\\\"warning\\\"));\\n\\nvar _ownerDocument = _interopRequireDefault(require(\\\"../utils/ownerDocument\\\"));\\n\\nvar internal = {\\n  focusKeyPressed: false,\\n  keyUpEventTimeout: -1\\n};\\n\\nfunction findActiveElement(doc) {\\n  var activeElement = doc.activeElement;\\n\\n  while (activeElement && activeElement.shadowRoot && activeElement.shadowRoot.activeElement) {\\n    activeElement = activeElement.shadowRoot.activeElement;\\n  }\\n\\n  return activeElement;\\n}\\n\\nfunction detectFocusVisible(instance, element, callback) {\\n  var attempt = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\\n  process.env.NODE_ENV !== \\\"production\\\" ? (0, _warning.default)(instance.focusVisibleCheckTime, 'Material-UI: missing instance.focusVisibleCheckTime.') : void 0;\\n  process.env.NODE_ENV !== \\\"production\\\" ? (0, _warning.default)(instance.focusVisibleMaxCheckTimes, 'Material-UI: missing instance.focusVisibleMaxCheckTimes.') : void 0;\\n  instance.focusVisibleTimeout = setTimeout(function () {\\n    var doc = (0, _ownerDocument.default)(element);\\n    var activeElement = findActiveElement(doc);\\n\\n    if (internal.focusKeyPressed && (activeElement === element || element.contains(activeElement))) {\\n      callback();\\n    } else if (attempt < instance.focusVisibleMaxCheckTimes) {\\n      detectFocusVisible(instance, element, callback, attempt + 1);\\n    }\\n  }, instance.focusVisibleCheckTime);\\n}\\n\\nvar FOCUS_KEYS = [9, // 'Tab',\\n13, // 'Enter',\\n27, // 'Escape',\\n32, // ' ',\\n37, // 'ArrowLeft',\\n38, // 'ArrowUp',\\n39, // 'ArrowRight',\\n40];\\n\\nfunction isFocusKey(event) {\\n  // Use event.keyCode to support IE 11\\n  return FOCUS_KEYS.indexOf(event.keyCode) > -1;\\n}\\n\\nvar handleKeyUpEvent = function handleKeyUpEvent(event) {\\n  if (isFocusKey(event)) {\\n    internal.focusKeyPressed = true; // Let's consider that the user is using a keyboard during a window frame of 500ms.\\n\\n    clearTimeout(internal.keyUpEventTimeout);\\n    internal.keyUpEventTimeout = setTimeout(function () {\\n      internal.focusKeyPressed = false;\\n    }, 500);\\n  }\\n};\\n\\nfunction listenForFocusKeys(win) {\\n  // The event listener will only be added once per window.\\n  // Duplicate event listeners will be ignored by addEventListener.\\n  // Also, this logic is client side only, we don't need a teardown.\\n  win.addEventListener('keyup', handleKeyUpEvent);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"detectFocusVisible\",\"instance\",\"element\",\"callback\",\"attempt\",\"arguments\",\"length\",\"undefined\",\"_warning\",\"default\",\"focusVisibleCheckTime\",\"focusVisibleMaxCheckTimes\",\"focusVisibleTimeout\",\"setTimeout\",\"activeElement\",\"doc\",\"_ownerDocument\",\"shadowRoot\",\"internal\",\"focusKeyPressed\",\"contains\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"value\",\"listenForFocusKeys\",\"win\",\"addEventListener\",\"handleKeyUpEvent\",\"keyUpEventTimeout\",\"FOCUS_KEYS\",\"event\",\"indexOf\",\"keyCode\",\"clearTimeout\"]\n}\n"]